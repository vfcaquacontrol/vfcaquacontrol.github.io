var topicDsBrd='IoT/AquaControl/Dashboard';var topicCmd='IoT/AquaControl/Commands';var mqttURI='';var mqttHost=(localStorage.getItem('mqttHost')||'iot.eclipse.org');var mqttPort=Number(localStorage.getItem('mqttPort')||443);var mqttPath='/ws';var mqttUser=(localStorage.getItem('mqttUser')||'');var mqttPwd=(localStorage.getItem('mqttPwd')||'');var mqttUseSSL=true;var mqttVersion=4;var mqttTimeout=5;const saveConfigButton=document.getElementById('btnSaveConfig');const reconnectButton=document.getElementById('btnReconnect');var recebendo=false;$('#configHost').val(mqttHost);$('#configPort').val(mqttPort);$('#configUser').val(mqttUser);$('#configPwd').val(mqttPwd);var options={onSuccess:mqtt_OnConnect,onFailure:mqtt_OnFailure,useSSL:mqttUseSSL,mqttVersion:mqttVersion,timeout:mqttTimeout,userName:mqttUser,password:mqttPwd};var jsonMsg={cmd:null,value:null};$(document).ready(function(){mqtt_Connect();$('#a1_luz').change(function(){$('#a1_luz').val($(this).is(':checked'));});$('#a2_luz').change(function(){$('#a2_luz').val($(this).is(':checked'));});$('#a1_luz').click(function(){if(recebendo)return true;if(!$(this).is(':checked')){var msg=jsonMsg;msg.cmd='a1-luz-on';msg.value='false';mqtt_Publish_Cmd(msg)}else{var msg=jsonMsg;msg.cmd='a1-luz-on';msg.value='true';mqtt_Publish_Cmd(msg)} return true;});$('#a2_luz').click(function(){if(recebendo)return true;if(!$(this).is(':checked')){var msg=jsonMsg;msg.cmd='a2-luz-on';msg.value='false';mqtt_Publish_Cmd(msg)}else{var msg=jsonMsg;msg.cmd='a2-luz-on';msg.value='true';mqtt_Publish_Cmd(msg)} return true;});});function myclientid(){return"myclientid_"+parseInt(Math.random()*100,10);} var client;if(mqttURI!=''){client=new Paho.MQTT.Client(mqttURI,'myclientid_'+myclientid());}else{client=new Paho.MQTT.Client(mqttHost,mqttPort,mqttPath,myclientid());} client.onConnectionLost=function(responseObject){mqtt_All_PrintMsg('connection lost: '+responseObject.errorMessage);};client._disconnected=()=>{mqtt_All_PrintMsg('disconnected');};client.onMessageArrived=function(message){recebendo=true;try{var obj=jsonMsg;obj=JSON.parse(message.payloadString);if(message.destinationName==topicDsBrd){if(obj.cmd=='a1-temp'){mqtt_A1_PrintTemp(obj.value);}else if(obj.cmd=='a2-temp'){mqtt_A2_PrintTemp(obj.value);}else if(obj.cmd=='a1-luz-on'){$("#a1_luz").prop('checked',(obj.value=='true'));}else if(obj.cmd=='a2-luz-on'){$("#a2_luz").prop('checked',(obj.value=='true'));}}else{console.log('tópico não encontrado: '+message.destinationName)}} catch(err){console.log("Error: "+err+".");} finally{recebendo=false;}};var publish=function(payload,topic,qos){payload=JSON.stringify(payload);var message=new Paho.MQTT.Message(payload);message.destinationName=topic;message.qos=qos;client.send(message);};function mqtt_Reconnect(){location.reload(false);} function mqtt_Connect(){mqtt_All_PrintMsg('Conectando...');client.connect(options);} function mqtt_OnConnect(){mqtt_All_PrintMsg('Conectado');mqtt_Subscribe();} function mqtt_OnFailure(message){mqtt_All_PrintMsg('Falha conexão: '+message.errorMessage);} function mqtt_Subscribe(){client.subscribe(topicDsBrd,{qos:2,onSuccess:callBack_OnSubscribe});} function callBack_OnSubscribe(invocationContext,grantedQos){mqtt_A1_PrintMsg('Pronto');mqtt_A2_PrintMsg('Pronto');setTimeout(function(){mqtt_Publish_InitialCmd();},500);} function mqtt_Publish_InitialCmd(){var cmd=jsonMsg;cmd.cmd="initvalues";cmd.value="true";publish(cmd,topicCmd,2);} function mqtt_Publish_Cmd(cmd){publish(cmd,topicCmd,2);} function mqtt_Disconnect(){try{client.disconnect();}catch(error){}} function mqtt_All_PrintMsg(msg){mqtt_A1_PrintMsg(msg);mqtt_A2_PrintMsg(msg);} function mqtt_A1_PrintMsg(msg){$('#divlogs').prepend('<span>A1: '+msg+'</span><br>');$("#a1_msg").val(msg);} function mqtt_A1_PrintTemp(msg){$('#divlogs').prepend('<span>A1: '+msg+'</span><br>');$("#a1_temp").val(msg);} function mqtt_A2_PrintMsg(msg){$('#divlogs').prepend('<span>A2: '+msg+'</span><br>');$("#a2_msg").val(msg);} function mqtt_A2_PrintTemp(msg){$('#divlogs').prepend('<span>A2: '+msg+'</span><br>');$("#a2_temp").val(msg);} const saveConfig=()=>{localStorage.setItem("mqttHost",$('#configHost').val());localStorage.setItem("mqttPort",$('#configPort').val());localStorage.setItem("mqttUser",$('#configUser').val());localStorage.setItem("mqttPwd",$('#configPwd').val());return location.reload(false);};reconnectButton.addEventListener('click',mqtt_Reconnect);saveConfigButton.addEventListener('click',saveConfig);